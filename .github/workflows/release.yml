on:
  workflow_dispatch:
    inputs:
      image:
        description: 'Image to Release'
        required: true
        type: string

permissions:
  id-token: write  # This is required for GH OIDC connection
  contents: read   # This is required for actions/checkout

jobs:
  image-release:
    runs-on: ubuntu-latest

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create & Push Minimal Image using apko
        id: apko
        uses: distroless/actions/apko-build@main
        with:
          config: initializbuildpacks/${{ inputs.image }}/apko.yaml
          tag: initializbuildpacks/${{ inputs.image }}:latest

      - name: Tag, and push docker image to Amazon ECR Public
        run: |
          docker load < output.tar

      - name: Check if Docker image exists locally
        run: |
          if docker images initializbuildpacks/${{ inputs.image }}:latest | grep -q initializbuildpacks/${{ inputs.image }}; then
            echo "Docker image initializbuildpacks/${{ inputs.image }}:latest found."
          else
            echo "Docker image initializbuildpacks/${{ inputs.image }}:latest not found. Please build the image first."
            exit 1
          fi

      - name: Tag and push Docker image to Docker Hub
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          REPOSITORY: ${{ inputs.image }}
        run: |
          docker tag initializbuildpacks/${{ inputs.image }}:latest initializbuildpacks/${{ inputs.image }}:latest
          docker push initializbuildpacks/${{ inputs.image }}:latest

      - name: Install sigstore/cosign
        uses: sigstore/cosign-installer@v3.1.2

      - name: Sign and push Docker image
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          REPOSITORY: ${{ inputs.image }}
        run: |
          cosign sign --key github/workflows/release.yml@refs/heads/main \
            --certificate-oidc-issuer https://token.actions.githubusercontent.com \
            initializbuildpacks/$REPOSITORY:latest
          docker push initializbuildpacks/$REPOSITORY:latest

      - name: Verify the pushed tags
        run: |
          cosign verify \
          initializbuildpacks/${{ inputs.image }}:latest \
          --certificate-identity https://github.com/initializ/secure-images/.github/workflows/release.yml@refs/heads/main \
          --certificate-oidc-issuer https://token.actions.githubusercontent.com | jq

      - name: Attest SBOM
        run: |
          cosign attest \
            --yes --predicate sbom-x86_64.spdx.json --type spdxjson initializbuildpacks/${{ inputs.image }}:latest
