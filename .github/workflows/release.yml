on:
  workflow_dispatch:
    inputs:
      images:
        description: 'List of images to Release (separated by commas)'
        required: true
        type: string

permissions:
  id-token: write  # This is required for GH OIDC connection
  contents: read   # This is required for actions/checkout

jobs:
  image-release:
    runs-on: ubuntu-latest

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        id: apko
        uses: distroless/actions/apko-build@main
        env:
          IMAGES: ${{ env.IMAGES }}
          TAG: ${{ github.ref_name }}
        with:
          config: images/${{ env.IMAGES }}/apko.yaml
          tag: initializbuildpacks/${{ env.IMAGES }}:${{ env.TAG }}
        run: |
          export IMAGES=${{ inputs.images }}
          for IMAGE in ${{ env.IMAGES }}; do
            echo "Building and pushing image $IMAGE"
            export IMAGE_NAME=${IMAGE/*/}
            echo "IMAGE_NAME=$IMAGE_NAME"
            export APKO_CONFIG="images/$IMAGE/apko.yaml"
            if [ -f "$APKO_CONFIG" ]; then
              echo "Config file exists: $APKO_CONFIG"
              apko build \
                --config "$APKO_CONFIG" \
                --tag "initializbuildpacks/$IMAGE:$TAG"
              docker push "initializbuildpacks/$IMAGE:$TAG"
            else
              echo "Config file not found: $APKO_CONFIG"
              exit 1
            fi
          done

      - name: Sign the images
        run: |
          IMAGES=${{ inputs.images }}
          for IMAGE in ${{ env.IMAGES }}; do
            echo "Signing image $IMAGE"
            cosign sign \
              --yes initializbuildpacks/${{ IMAGE }}:${{ github.ref_name }}
          done

      - name: Verify the pushed tags
        run: | 
          IMAGES=${{ inputs.images }}
          for IMAGE in ${{ env.IMAGES }}; do
            echo "Verifying image $IMAGE"
            cosign verify \
            initializbuildpacks/${{ IMAGE }}:${{ github.ref_name }} \
            --certificate-identity https://github.com/initializ/secure-images/.github/workflows/release.yml@refs/heads/main \
            --certificate-oidc-issuer https://token.actions.githubusercontent.com | jq
          done

      - name: Attest the SBOM
        run: |
          IMAGES=${{ inputs.images }}
          for IMAGE in ${{ env.IMAGES }}; do
            echo "Attesting SBOM for image $IMAGE"
            cosign attest \
              --yes --predicate sbom-x86_64.spdx.json --type spdxjson initializbuildpacks/${{ IMAGE }}:${{ github.ref_name }}
          done
