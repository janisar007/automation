name: Multi-Builder Image Release Workflow

on:
  workflow_dispatch:
    inputs:
      image:
        description: 'Image to Release'
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  image-release:
    runs-on: ubuntu-latest

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Iterate Over Builder Directories
        run: |
          for builder_dir in SecurePacks/InitzBuilder SecurePacks/PythonBuilder; do
            if [ -d "$builder_dir" ]; then
              cd "$builder_dir"
              for yaml_file in Build/apko.yaml Run/apko.yaml; do
                if [ -f "$yaml_file" ]; then
                  echo "Processing $yaml_file in $builder_dir"
                  - name: Create & Push Minimal Image using apko
                    id: apko_${builder_dir}_$yaml_file
                    uses: distroless/actions/apko-build@main
                    with:
                      config: "$yaml_file"
                      tag: "initializbuildpacks/${{ inputs.image }}:latest"
                  - name: Tag, and push docker image to Amazon ECR Public
                    run: |
                      docker load < output.tar
                  - name: Check if Docker image exists locally
                    run: |
                      if docker images initializbuildpacks/${{ inputs.image }}:latest-amd64 | grep -q initializbuildpacks/${{ inputs.image }}; then
                        echo "Docker image initializbuildpacks/${{ inputs.image }}:latest found."
                      else
                        echo "Docker image initializbuildpacks/${{ inputs.image }}:latest not found. Please build the image first."
                        exit 1
                      fi
                  - name: Tag and push Docker image to Docker Hub
                    env:
                      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
                      REPOSITORY: ${{ inputs.image }}
                    run: |
                      docker tag initializbuildpacks/${{ inputs.image }}:latest-amd64 initializbuildpacks/${{ inputs.image }}:latest
                      docker push initializbuildpacks/${{ inputs.image }}:latest
                  - uses: sigstore/cosign-installer@11086d25041f77fe8fe7b9ea4e48e3b9192b8f19
          
