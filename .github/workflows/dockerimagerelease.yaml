on:
  workflow_dispatch:
    inputs:
      image:
        description: 'Image to Release'
        required: true
        type: string

jobs:
  image-release:
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build  image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ inputs.image }}:latest -f images/${{ inputs.image }}/Dockerfile .
      
      - name: Push docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ inputs.image }}:latest

      # You can keep the rest of the steps unchanged, as they are not specific to ECR or Docker Hub
      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          image: ${{ secrets.DOCKER_USERNAME }}/${{ inputs.image }}:latest
          format: spdx
          artifact-name: sbom-x86_64.spdx.json
          output-file: sbom-x86_64.spdx.json
        id: anchore-sbom

      - name: Upload SBOM
        uses: actions/upload-artifact@v2
        with:
          name: sbom-x86_64
          path: sbom-x86_64.spdx.json

      - uses: sigstore/cosign-installer@11086d25041f77fe8fe7b9ea4e48e3b9192b8f19 # v3.1.2
      - name: Sign the images
        run: |
          cosign sign \
            --yes ${{ secrets.DOCKER_USERNAME }}/${{ inputs.image }}:latest
      - name: Verify the pushed tags
        run: | 
          cosign verify \
            ${{ secrets.DOCKER_USERNAME }}/${{ inputs.image }}:latest \
            --certificate-identity https://github.com/initializ/secure-images/.github/workflows/dockerimagerelease.yaml@refs/heads/main \
            --certificate-oidc-issuer https://token.actions.githubusercontent.com | jq
